plugins {
    id 'com.android.application'
}

android {
    namespace = 'com.example.testproject'
    compileSdk = 34

    defaultConfig {
        applicationId = "com.example.testproject"
        minSdk = 24
        targetSdk = 34
        versionCode = 1
        versionName = "1.0"

        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            // Generate a debug keystore for release builds (for testing purposes)
            // In production, you should use a proper release keystore
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        release {
            minifyEnabled = false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig = signingConfigs.release
        }
        debug {
            signingConfig = signingConfigs.debug
        }
    }
    
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    
    sourceSets {
        main {
            java.srcDirs = ['src/main/java']
            res.srcDirs = ['src/main/res']
            manifest.srcFile 'src/main/AndroidManifest.xml'
        }
    }
    
    // Configure APK output to project directory
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                def buildType = variant.buildType.name
                def fileName = "${buildType}_browser.apk"
                outputFileName = fileName
                
                // Copy APK to multiple locations after build
                variant.assembleProvider.get().doLast {
                    // Copy to apk directory (existing)
                    copy {
                        from outputFile.parent
                        into "${rootProject.projectDir}/apk"
                        include fileName
                        rename fileName, "browser.apk"
                    }
                    
                    // Copy to root directory with build type name
                    copy {
                        from outputFile.parent
                        into "${rootProject.projectDir}"
                        include fileName
                    }
                    
                    // Copy latest debug build as browser.apk in root
                    if (buildType == "debug") {
                        copy {
                            from outputFile.parent
                            into "${rootProject.projectDir}"
                            include fileName
                            rename fileName, "browser.apk"
                        }
                    }
                }
            }
        }
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.recyclerview:recyclerview:1.3.2'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'androidx.preference:preference:1.2.1'
    implementation 'androidx.cardview:cardview:1.0.0'
    // Add the WindowInsets compatibility library for newer UI handling
    implementation 'androidx.core:core:1.13.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
}
